name: Run Jepsen Tests

on:
  workflow_dispatch:
    inputs:
      workloads:
        description: Workloads (as JSON)
        type: string
        required: false
        default: "[ 'powersync' ]"
      backend-connectors:
        description: Backend connector classes (as JSON)
        type: string
        required: false
        default: "[ 'CrudTransactionConnector' ]"
      nemeses:
        description: 'Nemeses (as JSON)'
        type: string
        required: false
        default: "[ 'none' ]"
      rates:
        description: 'Rates (as JSON)'
        type: string
        required: false
        default: "[ '10', '20', '30', '40', '50' ]"
      time-limits:
        description: 'Time limits (as JSON)'
        type: string
        required: false
        default: "[ '100', '200', '300', '400', '500', '600']"
      cli-opts:
        description: 'CLI opts string'
        type: string
        required: false
        default: --nodes n1,n2,n3,n4,n5,n6 --postgres-nodes n1
      powersync-image-tag:
        description: PowerSync Image Tag
        type: string
        required: false
        default: latest
       
  workflow_call:
    inputs:
      workloads:
        description: 'Workloads (as JSON)'
        type: string
        required: false
        default: "[ 'powersync' ]"
      backend-connectors:
        description: Backend connector classes (as JSON)
        type: string
        required: false
        default: "[ 'CrudTransactionConnector' ]"
      nemeses:
        description: 'Nemeses (as JSON)'
        type: string
        required: false
        default: "[ 'none' ]"
      rates:
        description: 'Rates (as JSON)'
        type: string
        required: false
        default: "[ '10', '20', '30', '40', '50' ]"
      time-limits:
        description: 'Time limits (as JSON)'
        type: string
        required: false
        default: "[ '100', '200', '300', '400', '500', '600']"
      cli-opts:
        description: 'CLI opts string'
        type: string
        required: false
        default: --nodes n1,n2,n3,n4,n5,n6 --postgres-nodes n1
      powersync-image-tag:
        description: PowerSync Image Tag
        type: string
        required: false
        default: latest

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        workload:          ${{ fromJSON(inputs.workloads) }}
        backend-connector: ${{ fromJson(inputs.backend-connectors)}}
        nemesis:           ${{ fromJSON(inputs.nemeses) }}
        rate:              ${{ fromJSON(inputs.rates) }}
        time-limit:        ${{ fromJSON(inputs.time-limits) }}

    env:
      test-title: ${{ matrix.workload }}-${{ matrix.backend-connector }}-${{ matrix.nemesis }}-${{ matrix.rate }}tps-${{ matrix.time-limit }}s
      POWERSYNC_IMAGE_TAG: ${{ inputs.powersync-image-tag }}

    steps:  
      - name: Checkout jepsen-powersync
        uses: actions/checkout@v4
      
      - name: Bring Up Docker Environment
        run: |
          cd $GITHUB_WORKSPACE/docker
          ./docker-build.sh
          ./docker-compose-up.sh
          
      - name: ${{ env.test-title }}
        run: |
          cd $GITHUB_WORKSPACE/docker
          ./docker-run.sh lein run test --workload          ${{ matrix.workload }} \
                                        --backend-connector ${{ matrix.backend-connector }} \
                                        --nemesis           ${{ matrix.nemesis }}  \
                                        --rate              ${{ matrix.rate }}     \
                                        --time-limit        ${{ matrix.time-limit }} \
                                        ${{ inputs.cli-opts }}

      - name: Jepsen, PowerSync, and PostgreSQL Logs
        if: ${{ always() }}
        run: |
          mkdir -p $GITHUB_WORKSPACE/store/current
          docker logs powersync     &> $GITHUB_WORKSPACE/store/current/powersync.log     || echo "no docker logs" > $GITHUB_WORKSPACE/store/current/powersync.log
          docker logs pg-db         &> $GITHUB_WORKSPACE/store/current/pg-db.log         || echo "no docker logs" > $GITHUB_WORKSPACE/store/current/pg-db.log
          docker logs mongo         &> $GITHUB_WORKSPACE/store/current/mongo.log         || echo "no docker logs" > $GITHUB_WORKSPACE/store/current/mongo.log
          docker logs mongo-rs-init &> $GITHUB_WORKSPACE/store/current/mongo-rs-init.log || echo "no docker logs" > $GITHUB_WORKSPACE/store/current/mongo-rs-init.log
          docker cp jepsen-control:/jepsen/jepsen-powersync/store/current/. $GITHUB_WORKSPACE/store/current
          tail -n 100 $GITHUB_WORKSPACE/store/current/jepsen.log > $GITHUB_WORKSPACE/store/current/tail-jepsen.log

      - name: 'Jepsen Test Artifacts: summary'
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: '${{ env.test-title }}-summary'
          path: |
            ${{ github.workspace }}/store/current/results.edn
            ${{ github.workspace }}/store/current/tail-jepsen.log
            
      - name: 'Jepsen Test Artifacts: full'
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: '${{ env.test-title }}-${{ job.status }}'
          path: |
            ${{ github.workspace }}/store/current
