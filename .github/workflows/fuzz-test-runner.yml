name: Fuzz Test Runner

on:
  workflow_dispatch:
    inputs:
      clients:
        description: 'Clients (as JSON)'
        type: string
        required: true
        default: "[ '5', '10' ]"
      rates:
        description: 'Rates (as JSON)'
        type: string
        required: true
        default: "[ '10', '20', '30', '40' ]"
      times:
        description: 'Time limits (as JSON)'
        type: string
        required: true
        default: "[ '100', '200', '300' ]"
      postgresql:
        description: '--[no-]postgresql (as JSON)'
        type: string
        required: true
        default: "[ '--no-postgresql', '--postgresql' ]"
      disconnect:
        description: '--[no-]disconnect (as JSON)'
        type: string
        required: true
        default: "[ '--no-disconnect', '--disconnect' ]"
      stop:
        description: '--[no-]stop (as JSON)'
        type: string
        required: true
        default: "[ '--no-stop' ]"
      partition:
        description: '--[no-]partition (as JSON)'
        type: string
        required: true
        default: "[ '--no-partition', '--partition' ]"
      pause:
        description: '--[no-]pause (as JSON)'
        type: string
        required: true
        default: "[ '--no-pause' ]"
      interval:
        description: 'Interval for disconnect/connect (as JSON)'
        type: string
        required: true
        default: "[ '5' ]"
      repeat:
        description: 'unused value to repeat test matrix (as JSON)'
        type: string
        required: true
        default: "[ '1' ]"
       
  workflow_call:
    inputs:
      clients:
        description: 'Clients (as JSON)'
        type: string
        required: false
        default: "[ '5', '10' ]"
      rates:
        description: 'Rates (as JSON)'
        type: string
        required: false
        default: "[ '10', '20', '30', '40' ]"
      times:
        description: 'Time limits (as JSON)'
        type: string
        required: false
        default: "[ '100', '200', '300' ]"
      postgresql:
        description: '--[no-]postgresql (as JSON)'
        type: string
        required: false
        default: "[ '--no-postgresql', '--postgresql' ]"
      disconnect:
        description: '--[no-]disconnect (as JSON)'
        type: string
        required: false
        default: "[ '--no-disconnect', '--disconnect' ]"
      stop:
        description: '--[no-]stop (as JSON)'
        type: string
        required: false
        default: "[ '--no-stop' ]"
      partition:
        description: '--[no-]partition (as JSON)'
        type: string
        required: false
        default: "[ '--no-partition', '--partition' ]"
      pause:
        description: '--[no-]pause (as JSON)'
        type: string
        required: false
        default: "[ '--no-pause' ]"
      interval:
        description: 'Interval for disconnect/connect (as JSON)'
        type: string
        required: false
        default: "[ '5' ]"
      repeat:
        description: 'unused matrix value to repeat test matrix (as JSON)'
        type: string
        required: false
        default: "[ '1' ]"

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        clients:    ${{ fromJSON(inputs.clients) }}
        rate:       ${{ fromJSON(inputs.rates) }}
        time:       ${{ fromJSON(inputs.times) }}
        postgresql: ${{ fromJSON(inputs.postgresql) }}
        disconnect: ${{ fromJSON(inputs.disconnect) }}
        stop:       ${{ fromJSON(inputs.stop) }}
        partition:  ${{ fromJSON(inputs.partition) }}
        pause:      ${{ fromJSON(inputs.pause) }}
        interval:   ${{ fromJson(inputs.interval) }}
        repeat:     ${{ fromJSON(inputs.repeat) }}

    env:
      test-title: ${{ matrix.clients}}c-${{ matrix.rate }}tps-${{ matrix.time }}s-${{ matrix.postgresql }}-${{ matrix.disconnect }}-${{ matrix.stop }}-${{ matrix.partition }}-${{ matrix.pause }}-${{ matrix.interval }}s-${{ matrix.repeat }}
      POWERSYNC_IMAGE_TAG: latest

    steps:
      - name: Checkout jepsen-powersync
        uses: actions/checkout@v4
      
      - name: Bring Up Docker Environment
        run: |
          cd $GITHUB_WORKSPACE/docker
          ./powersync-fuzz-build.sh
          ./powersync-fuzz-up.sh

      - name: ${{ env.test-title }}
        timeout-minutes: 10
        run: |
          cd $GITHUB_WORKSPACE/docker
          ./powersync-fuzz-run.sh ./powersync_fuzz                 \
                                  --table mww                      \
                                  --clients ${{ matrix.clients }}  \
                                  --rate ${{ matrix.rate }}        \
                                  --time ${{ matrix.time }}        \
                                  ${{ matrix.postgresql }}         \
                                  ${{ matrix.disconnect }}         \
                                  ${{ matrix.stop }}               \
                                  ${{ matrix.partition }}          \
                                  ${{ matrix.pause }}              \
                                  --interval ${{ matrix.interval}}

      - name: PowerSync Fuzz, Service, PostgreSQL, and Mongo Logs
        if: ${{ always() }}
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts
          docker logs powersync     &> $GITHUB_WORKSPACE/artifacts/powersync.log     || echo "no docker logs" > $GITHUB_WORKSPACE/artifacts/powersync.log
          docker logs pg-db         &> $GITHUB_WORKSPACE/artifacts/pg-db.log         || echo "no docker logs" > $GITHUB_WORKSPACE/artifacts/pg-db.log
          docker logs mongo         &> $GITHUB_WORKSPACE/artifacts/mongo.log         || echo "no docker logs" > $GITHUB_WORKSPACE/artifacts/mongo.log
          docker logs mongo-rs-init &> $GITHUB_WORKSPACE/artifacts/mongo-rs-init.log || echo "no docker logs" > $GITHUB_WORKSPACE/artifacts/mongo-rs-init.log
          docker cp powersync-fuzz-node:/jepsen/jepsen-powersync/powersync_endpoint/powersync_fuzz.log $GITHUB_WORKSPACE/artifacts

      - name: 'PowerSync Fuzz Test Artifacts: powersync_fuzz.log'
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: '${{ env.test-title }}-powersync_fuzz.log'
          path: |
            ${{ github.workspace }}/artifacts/powersync_fuzz.log
            
      - name: 'PowerSync Fuzz Test Artifacts: full'
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: '${{ env.test-title }}-${{ job.status }}'
          path: |
            ${{ github.workspace }}/artifacts
